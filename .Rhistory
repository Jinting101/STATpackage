A
b
A = matrix(c(2, 6, 2, 4, 4, 8, 2, 8, 0), 3, 3)
b = matrix(c(0, 0, 12), 3, 1)
solve(A, b)
D = maxtrix(c(2, 4, 2, 4, 6, 8, 2, 8, 0), 3, 3)
D = matrix(c(2, 4, 2, 4, 6, 8, 2, 8, 0), 3, 3)
D
eigen(D)$eig
eigen(D)$values
A = matrix(c(2, 4, 2, 4, 6, 8, 2, 8, 0), 3, 3)
b = matrix(c(0, 0, 12), 3, 1)
solve(A, b)
google <- getSymbols("AAL", from = "2006/12/31", to = "2021/11/02", auto.assign = FALSE)
google <- getSymbols("AAL", from = "2006/12/31", to = "2021/11/02", auto.assign = FALSE)
sp500 <- getSymbols("^GSPC", from = "2006/12/31", to = "2021/11/02", auto.assign = FALSE)
google <- coredata(monthlyReturn(google))
sp500 <- coredata(monthlyReturn(sp500))
m <- length(google)
A <- cbind(google, sp500)
e <- rep(1, m)
I <- diag(e)
# 4
library(quantmod)
google <- getSymbols("AAL", from = "2006/12/31", to = "2021/11/02", auto.assign = FALSE)
google <- getSymbols("AAL", from = "2006/12/31", to = "2021/11/02", auto.assign = FALSE)
sp500 <- getSymbols("^GSPC", from = "2006/12/31", to = "2021/11/02", auto.assign = FALSE)
google <- coredata(monthlyReturn(google))
sp500 <- coredata(monthlyReturn(sp500))
m <- length(google)
A <- cbind(google, sp500)
e <- rep(1, m)
I <- diag(e)
mean(google)
mean(sp500)
K = 1/(m-1) * t(A) %*% (I - e%o%e / m) %*% A
K
K[2]
A = matrix(c(2*k[1], 2*K[2], mean(google), 1, 2*K[2], 2*K[4], mean(sp500), 1, mean(google), mean(sp500),
0, 0, 1, 1, 0, 0), 4, 4)
A = matrix(c(2*K[1], 2*K[2], mean(google), 1, 2*K[2], 2*K[4], mean(sp500), 1, mean(google), mean(sp500),
0, 0, 1, 1, 0, 0), 4, 4)
A
b = matrix(c(0, 0, 0.014, 1), 4, 1 )
b
solve(A, b)
bb = matrix(0, 0, 0.02, 1)
solve(A, bb)
bb = matrix(c(0, 0, 0.02, 1), 4, 1)
solve(A, bb)
x1 = 0.68394
x2 = x1-(x1*exp(x1)-1)/(exp(x1)+x1*exp(x1))
x1=x2
x1*exp(x1)-1
x2 = x1-(x1*exp(x1)-1)/(exp(x1)+x1*exp(x1))
x1=x2
x1*exp(x1)-1
install.packages('rmarkdown')
3<4 && 4<5
T || T
typeof(7)
is.numeric(7)
is.double(7)
is.integer(3)
as.integer(3)
is.integer(as.integer(3))
install.packages("palmerpenguins")
is.na(NA)
is.na("NA")
round(4.5)
round(3.5)
round(4.49999)
round(4.5000001)
class(NA)
class("NA")
?round
typeof(NA)
x = c("Hello", "mu", 30, NA, "students")
x[is.na(x)]
x[is.na(x)] = "beloved"
x
cat(x, sep = "+")
cat(x, sep = "")
cat(x)
5 + T
as.numeric("7as4")
as.numeric("74")
seq(1, 10, 2)
?rep
rep(c(1,2), eacj = 2, times = 3)
rep(c(1,2), each = 2, times = 3)
seq(0, 20, 5)
rep(c(1, 2), 2, 3)
rep(c(1, 2), 3, 2)
x
x[c(T, T, F, T, T)]
x[T, T, F, T, T]
x[c(T, T, F, T, T)]
x = 1:5
y = -5:-1
y
x
(x>=3)&&(y<2)
(x>=3)&(y<2)
(x>=3)&(y<-2)
(x>=3) & (y<-2)
y<-2
y=-5:-1
y < -2
(x >= 3) & (y < -2)
(x >= 3) && (y < -2)
which(y == -4)
identical(x, y)
rev(y)
y
?rev
x
names(x)
names(x) = c("a", "b", "c", "d", "e")
x
names(x)
summary(x)
any(x >= 5)
length(x[x >= 5]) == 0
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
set.seed(456)
sample(1:6, 1)
reticulate::repl_python()
x = 5
rm(x)
to_do_list <-
list(saturday = c("sleep", "feed cat", "pet cat"),
sunday = c("wake up", "homework", "course prep"))
to_do_list[1]
to_do_list[[1]]
to_do_list[1][1]
class(to_do_list[1][1])
class(to_do_list[1][[1]])
to_do_list[1][[1]]
5 / 10
5 % 10
5 %% 10
library(stringr)
str_length("character")
for (i in 1:5) {}
for (i in 1:5) {print(i)}
cnt = 0;
cnt = 1
x = sample(c(0, 1), 1)
while (x == 0) {
}
while (x == 0) {x = sample(c(0, 1), 1); cnt = cnt + 1}
cnt
class(3)
is.integer(3)
is.numeric(3)
is.numeric(3.5)
as.integer(3.5)
typeof(3)
typeof(4.5)
3.5 %% 1
10.566 %% 1
10 %% 1
"c" %% 1
is.vector(1)
is.vector(100)
x = c(1, 2, 3)
x[2]
x[0]
x = matrix()
x
x[2, 3] = 9
length(diag(3))
is.matrix(list(m = "k, l"))
-4 %% 1
print(5)
print(c("ki", 5))
print("ki", 5)
x <- function(y) {}
x <function()
x <- function(y) {if (y > 20) {}}
x <- function(y) {
if (y > 20) {
print("y is greater than 20")
} else if (10 < y < 15) {
print("y is between 10 and 15")
}
}
x <- function(y) {
if (y > 20) {
print("y is greater than 20")
} else if (10 < y && y < 15) {
print("y is between 10 and 15")
}
}
x(20)
x <- function(y) {
if (y > 20) {
print("y is greater than 20")
} else if (10 < y && y < 15) {
print("y is between 10 and 15")
} else {
print("none of the above")
}
}
x(20)
x(12)
b = matrix(c(6, 5, -2), 1, 3)
b
A = matrix(c(2, -2, 1, 4, 4, -2, 1, 2, -1), 3, 3)
A
solve((A, b))
solve((A, b)
solve(A, b)
t(b)
b = t(b)
solve(A, b)
A
A
?matrix
A = matrix(c(2, -2, 1, 4, 4, -2, 1, 2, -1), 3, byrow = T)
A
solve(A, b)
A
A = matrix(c(3, 5, -2, 2, -2, 1, 1, 2, -1), 3, byrow = T)
solve(A, b)
y = t(c(1, 9, 0, 21))
y
y = c(1, 9, 0, 21)
y
y = t(t(c(1, 9, 0, 21)))
y
A = matrix(c(1, 3, 5, -2, 2, 4, 2, -2, 1, 1, 2, 4, 4, -2, 5, 3,1,2,-1,-2), 4, 5, byrow = T)
solve(A, y)
A %*% y
y %*% A
y = t(c(1, 9, 0, 21))
y %*% A
A = matrix(c(3, 5, -2, 2, -2, 1, 1, 2, -1), 3, byrow = T)
A
b
b = t(b)
b
solve(A, b)
solve(A)
b %*% solve(A)
y = t(c(1, 1, 0, 1))
A = matrix(c(1, 3, 5, -2, 2, 4, 2, -2, 1, 1, 2, 4, 4, -2, 5, 3,1,2,-1,-2), 4, 5, byrow = T)
A
y %*% A
x = matrix(c(3754, 60, 2666, 0, 920, 3096, 543, 672), 1)
x
7*x[1]-7*x[3]-13*x[5]+8*x[7]
2*x[1]-1*x[3]+3*x[5]-14*x[7]
16*x[2]=2*x[4]-4*x[6]+17*x[8]
16*x[2]+2*x[4]-4*x[6]+17*x[8]
2*x[2]-1*x[4]+3*x[6]-14*x[8]
3814-3756-60
B = diag(5)
B
B[4, 3] = 1
B
d = matrix(c(0, 1, 0, 1, 0), 5, 1)
d
solve(B, d)
x = d
x
B %*% x
B[2, 4] = 1
B
d = matrix(c(0, 0, 1, 0, 1), 5, 1)
slove(B, d)
solve(B, d)
B
B[:, 2] = c(0, 0, 1, 0, 1)
B[, 2] = c(0, 0, 1, 0, 1)
B
d = matrix(c(1, 0, 0, 0, 1), 5, 1)
solve(B, d)
B
B[5, 1] = 1
B
B[5, 5] = 0
B[1, 5] = 1
B
x = B[, 2]
B[, 2] = B[, 4]
B[, 4] = x
B
solve(B)
b = matrix(c(480, 400, 230, 420, 250), 5, 1)
b
solve(B) %*% b
B
solve(B)
library(rgdal)
install.packages("rgdal")
library(rgdal)
lnd <- readOGR(dsn = "data", layer = "london_sport")
install.packages("sf")
install.packages("sf")
library(sf)
library("sf")
library(sf)
library(sf)
install.packages("sf")
library(sf)
install.packages(c("devtools", "roxygen2", "testthat", "knitr", "covr"))
getwd()
pwd(Desktop/STAT302)
setwd(Desktop/STAT302)
setwd(/Desktop/STAT302)
ls()
setwd(Desktop)
setwd(/Users/jinting/Desktop/STAT302 )
setwd(Users/jinting/Desktop/STAT302 )
getwd()
setwd("Desktop")
setwd("STAT302")
setwd("peojects")
setwd("projects")
setwd("project_3")
devtools::create("STATpackage")
devtools::document()
devtools::document()
getwd()
setwd("STATpackage")
devtools::document()
devtools::document()
devtools::install()
library(STATpackage)
?my_lm
?lm
?t.test
devtools::document()
?my_knn_cv
?my_lm
type devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
?my_knn_cv
getwd()
devtools::document()
devtools::install()
library(STATpackage)
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
library(penguins)
library(palmerpenguins)
data("penguins")
force(penguins)
force(penguins_raw)
my_penguins <- penguins
usethis::use_data(my_penguins)
View(penguins)
unique(penguins$species)
length(unique(penguins$island))
length(unique(penguins$bill_length_mm))
devtools::document()
?my_penguins
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
?matrix
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
View(my_penguins)
usethis::use_vignette("tutorial", title = "STATpackage Tutorial")
usethis::use_pipe()
devtools::document()
View(my_penguins)
devtools::document()
?my_penguins
devtools::document()
?my_penguins
library(STATpackage)
my_penguins
?my_pengiuns
my_penguins
library(STATpackage)
data("my_penguins")
# extract body mass from the data and remove NA values
bm = na.omit(penguins$body_mass_g)
devtools::install()
library(STATpackage)
?my_penguins
devtools::check()
library(palmerpenguins)
penguins
mean(penguins$body_mass_g)
mean(penguins$body_mass_g, na.rm = T)
?my_lm
devtools::document()
devtools::document()
?my_knn_cv
1:10
devtools::check()
usethis::use_gpl_license()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
?lm
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
?knn
iris3
mtcars
devtools::document()
devtools::check()
devtools::document()
devtools::check()
View(mtcars)
?t.text
?t.tesy
?t.test
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
?t.test
devtools::document()
devtools::check()
solve(matrix(c(1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0,0,0,1), 5, 5))
